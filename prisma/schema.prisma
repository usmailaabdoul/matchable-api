// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum SessionType {
  PADEL
  FITNESS
  TENNIS
}

model Trainer {
  id        String    @id @default(cuid())
  name      String
  specialty String
  availability TrainerAvailability[]
}

model Session {
  id          String    @id @default(cuid())
  type        SessionType
  durations   Duration[]
  timeSlots   TimeSlot[]
}

model Duration {
  id          String    @id @default(cuid())
  sessionId   String
  session     Session   @relation(fields: [sessionId], references: [id])
  minutes     Int
  price       Float
}

model TimeSlot {
  id          String    @id @default(cuid())
  sessionId   String
  session     Session   @relation(fields: [sessionId], references: [id])
  startTime   DateTime
  trainerAvailability TrainerAvailability[]
}

model TrainerAvailability {
  id          String    @id @default(cuid())
  trainerId   String
  trainer     Trainer   @relation(fields: [trainerId], references: [id])
  timeSlotId  String
  timeSlot    TimeSlot  @relation(fields: [timeSlotId], references: [id])
  isBooked    Boolean   @default(false)
  booking     Booking?  @relation(fields: [bookingId], references: [id])
  bookingId   String?
}

model Booking {
  id         String    @id @default(cuid())
  clientName String
  email      String
  phone      String
  trainerSlots    TrainerAvailability[]
  totalCost  Float
  createdAt  DateTime  @default(now())
}